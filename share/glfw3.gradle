model {
    repositories {
        libs (PrebuiltLibraries) {
            glfw3 {				
				binaries.withType(SharedLibraryBinary) { binary ->					
					if (binary.targetPlatform.operatingSystem.windows) {
                        headers.srcDir rootProject.file('share/src/generic/glfw3/include')
                        
                        switch (binary.targetPlatform.architecture.name) {
                            case 'x86':
                            case 'i386':
                            case 'i686':
                            case 'ia-32':
                                sharedLibraryFile = rootProject.file('share/bin/windows32/glfw3/glfw3.dll')
                                break;
                            case 'x86_64':
                            case 'amd64':
                            case 'x64':
                            case 'x86-64':
						        sharedLibraryFile = rootProject.file('share/bin/windows64/glfw3/glfw3.dll')
                                break
                            default:
                                sharedLibraryFile = rootProject.file('share/bin/dummy.dll')
                                break
			            }
		            } else {
                        sharedLibraryFile = rootProject.file('share/bin/dummy.so')
                    }
				}
			}
        }
    }
}