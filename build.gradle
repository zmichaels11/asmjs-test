apply plugin: 'cpp'

wrapper {
	gradleVersion = '4.3'
}

model {
	platforms {
		binaryen {
			architecture "binaryen"
		}

		asmjs {
			architecture "asmjs"
		}
	}

	toolChains {
		Emscripten(Clang) {
			target("asmjs") {
				cppCompiler.executable = 'em++'
				linker.executable = "em++"

				cppCompiler.withArguments { args ->
					args << "-std=c++14"
					args << "-O2"
					args << "-s"
					args << "USE_GLFW=3"
					args << "-s"
					args << "USE_WEBGL2=1"
				}

				linker.withArguments { args ->
					args[1] += ".html"
					args.remove "-m64"
					args << "-O2"
					args << "-s"
					args << "USE_GLFW=3"
					args << "-s"
					args << "USE_WEBGL2=1"
				}
			}

			target("binaryen") {
				cppCompiler.executable = 'em++'
				linker.executable = "em++"

				cppCompiler.withArguments { args ->
					args << "-std=c++14"
					args << "-O2"
					args << "-s"
					args << "USE_GLFW=3"
					args << "-s"
					args << "USE_WEBGL2=1"
					args << "-s"
					args << "BINARYEN=1"
				}

				linker.withArguments { args ->
					args[1] += ".html"
					args.remove "-m64"
					args << "-O2"
					args << "-s"
					args << "USE_GLFW=3"
					args << "-s"
					args << "USE_WEBGL2=1"
					args << "-s"
					args << "BINARYEN=1"
					args << "--preload-file"
					args << "data"
				}
			}
		}
	}	

	components {
		ws(NativeExecutableSpec) {
			targetPlatform "binaryen"
			targetPlatform "asmjs"

			sources {
				cpp {
					source {
						srcDir 'src/main/cpp'
						include '**/*.cpp'
					}

					exportedHeaders {
						srcDir 'src/main/include'
						include '**/*.hpp'
					}
				}
			}
		}
	}
}

task emscriptenUpdate (type: Exec) {
	executable "emsdk-portable/emsdk"
	args "update"
}

task emscriptenInstall (type: Exec) {
	dependsOn emscriptenUpdate
	executable "emsdk-portable/emsdk"
	args "install", "latest"
}

task emscriptenActivate (type: Exec) {
	dependsOn emscriptenInstall
	executable "emsdk-portable/emsdk"
	args "activate", "latest"
}

task emscripten {
	dependsOn emscriptenActivate
}

task run {
	dependsOn build		

	doLast {		
		java.awt.Desktop.getDesktop().browse(new java.io.File("build/exe/ws/${arch}/ws.html").toURI());
	}
}
